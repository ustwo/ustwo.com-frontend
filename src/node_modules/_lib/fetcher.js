import { polyfill } from 'es6-promise';
import Fetch from 'Fetch';

import pick from 'lodash/object/pick';

(typeof window !== 'undefined') && (window.ajaxPending = false);
let ajaxes = {};

let defaultConfig = {
  mode: 'cors',
  headers: {
    'Origin': window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '')
  },
  baseurl: '/api/'
  // baseurl: 'https://ustwo.hmn.md/'
}

function fetcher (config) {
  let mergedConfig = Object.assign({}, defaultConfig, config);
  let url = mergedConfig.baseurl + mergedConfig.namespace + mergedConfig.url;
  console.log('Fetching:', url);
  const req = Fetch(url, mergedConfig)
    .then((response) => {
      remove(mergedConfig.url);
      if (response.status >= 400) {
        if(mergedConfig.failure) {
          mergedConfig.failure(response);
        } else {
          throw new Error("Bad response from server");
        }
      }
      return response.json();
    })
    .then(mergedConfig.success)
    .catch(mergedConfig.failure);
  add(mergedConfig.url, req);
}

function add (url, req) {
  ajaxes[url] = req;
  window.ajaxPending = true;
}

function remove (url) {
  delete ajaxes[url];
  window.ajaxPending = !!Object.keys(ajaxes).length;
}

export default fetcher;
